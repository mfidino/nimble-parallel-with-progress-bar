starting worker pid=10388 on localhost:11757 at 10:58:12.319
starting worker pid=16288 on localhost:11757 at 10:58:12.327
starting worker pid=11824 on localhost:11757 at 10:58:12.329
nimble version 0.11.0 is loaded.
For more information on NIMBLE and a User Manual,
please visit http://R-nimble.org.
nimble version 0.11.0 is loaded.
For more information on NIMBLE and a User Manual,
please visit http://R-nimble.org.
nimble version 0.11.0 is loaded.
For more information on NIMBLE and a User Manual,
please visit http://R-nimble.org.

Attaching package: 'nimble'


Attaching package: 'nimble'

The following object is masked from 'package:stats':

    simulate

The following object is masked from 'package:stats':

    simulate


Attaching package: 'nimble'

The following object is masked from 'package:stats':

    simulate

defining model...
defining model...
defining model...
building model...
building model...
building model...
setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... 
checking model sizes and dimensions...
checking model sizes and dimensions...
checking model sizes and dimensions... This model is not fully initialized. This is not an error. To see which variables are not initialized, use model$initializeInfo(). For more information on model initialization, see help(modelInitialization).
model building finished.
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
 This model is not fully initialized. This is not an error. To see which variables are not initialized, use model$initializeInfo(). For more information on model initialization, see help(modelInitialization).
model building finished.
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
 This model is not fully initialized. This is not an error. To see which variables are not initialized, use model$initializeInfo(). For more information on model initialization, see help(modelInitialization).
model building finished.
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
compilation finished.
compilation finished.
compilation finished.
===== Monitors =====
thin = 1: beta_psi_mu, tau_psi, beta_rho_mu, tau_rho
===== Samplers =====
RW sampler (8)
  - beta_psi_mu[]  (2 elements)
  - beta_rho_mu[]  (2 elements)
  - beta_psi[]  (2 elements)
  - beta_rho[]  (2 elements)
conjugate sampler (4)
  - tau_psi[]  (2 elements)
  - tau_rho[]  (2 elements)
binary sampler (50)
  - z[]  (50 elements)
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 1: z
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 5: z
===== Monitors =====
thin = 1: beta_psi_mu, tau_psi, beta_rho_mu, tau_rho
===== Samplers =====
RW sampler (8)
  - beta_psi_mu[]  (2 elements)
  - beta_rho_mu[]  (2 elements)
  - beta_psi[]  (2 elements)
  - beta_rho[]  (2 elements)
conjugate sampler (4)
  - tau_psi[]  (2 elements)
  - tau_rho[]  (2 elements)
binary sampler (50)
  - z[]  (50 elements)
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 1: z
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 5: z
===== Monitors =====
thin = 1: beta_psi_mu, tau_psi, beta_rho_mu, tau_rho
===== Samplers =====
RW sampler (8)
  - beta_psi_mu[]  (2 elements)
  - beta_rho_mu[]  (2 elements)
  - beta_psi[]  (2 elements)
  - beta_rho[]  (2 elements)
conjugate sampler (4)
  - tau_psi[]  (2 elements)
  - tau_rho[]  (2 elements)
binary sampler (50)
  - z[]  (50 elements)
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 1: z
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 5: z
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
compilation finished.
running chain 1...
Error in serialize(data, node$con) : error writing to connection
Calls: <Anonymous> ... doTryCatch -> sendData -> sendData.SOCKnode -> serialize
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Execution halted
compilation finished.
running chain 1...
Error in serialize(data, node$con) : error writing to connection
Calls: <Anonymous> ... doTryCatch -> sendData -> sendData.SOCKnode -> serialize
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Execution halted
compilation finished.
running chain 1...
Error in serialize(data, node$con) : error writing to connection
Calls: <Anonymous> ... doTryCatch -> sendData -> sendData.SOCKnode -> serialize
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Execution halted
starting worker pid=5212 on localhost:11611 at 10:59:29.773
starting worker pid=14548 on localhost:11611 at 10:59:29.789
starting worker pid=6044 on localhost:11611 at 10:59:29.792
nimble version 0.11.0 is loaded.
For more information on NIMBLE and a User Manual,
please visit http://R-nimble.org.

Attaching package: 'nimble'

The following object is masked from 'package:stats':

    simulate

defining model...
nimble version 0.11.0 is loaded.
For more information on NIMBLE and a User Manual,
please visit http://R-nimble.org.

Attaching package: 'nimble'

The following object is masked from 'package:stats':

    simulate

defining model...
nimble version 0.11.0 is loaded.
For more information on NIMBLE and a User Manual,
please visit http://R-nimble.org.

Attaching package: 'nimble'

The following object is masked from 'package:stats':

    simulate

defining model...
building model...
building model...
building model...
setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... setting data and initial values...
setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... 
checking model sizes and dimensions...checking model sizes and dimensions...
checking model sizes and dimensions... This model is not fully initialized. This is not an error. To see which variables are not initialized, use model$initializeInfo(). For more information on model initialization, see help(modelInitialization).
model building finished.
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
 This model is not fully initialized. This is not an error. To see which variables are not initialized, use model$initializeInfo(). For more information on model initialization, see help(modelInitialization).
model building finished.
 This model is not fully initialized. This is not an error. To see which variables are not initialized, use model$initializeInfo(). For more information on model initialization, see help(modelInitialization).
model building finished.
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
compilation finished.
compilation finished.
compilation finished.
===== Monitors =====
thin = 1: beta_psi_mu, tau_psi, beta_rho_mu, tau_rho
===== Samplers =====
RW sampler (8)
  - beta_psi_mu[]  (2 elements)
  - beta_rho_mu[]  (2 elements)
  - beta_psi[]  (2 elements)
  - beta_rho[]  (2 elements)
conjugate sampler (4)
  - tau_psi[]  (2 elements)
  - tau_rho[]  (2 elements)
binary sampler (50)
  - z[]  (50 elements)
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 1: z
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 5: z
===== Monitors =====
thin = 1: beta_psi_mu, tau_psi, beta_rho_mu, tau_rho
===== Samplers =====
RW sampler (8)
  - beta_psi_mu[]  (2 elements)
  - beta_rho_mu[]  (2 elements)
  - beta_psi[]  (2 elements)
  - beta_rho[]  (2 elements)
conjugate sampler (4)
  - tau_psi[]  (2 elements)
  - tau_rho[]  (2 elements)
binary sampler (50)
  - z[]  (50 elements)
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 1: z
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 5: z
===== Monitors =====
thin = 1: beta_psi_mu, tau_psi, beta_rho_mu, tau_rho
===== Samplers =====
RW sampler (8)
  - beta_psi_mu[]  (2 elements)
  - beta_rho_mu[]  (2 elements)
  - beta_psi[]  (2 elements)
  - beta_rho[]  (2 elements)
conjugate sampler (4)
  - tau_psi[]  (2 elements)
  - tau_rho[]  (2 elements)
binary sampler (50)
  - z[]  (50 elements)
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
Note: Assigning an RW_block sampler to nodes with very different scales can result in low MCMC efficiency.  If all nodes assigned to RW_block are not on a similar scale, we recommend providing an informed value for the "propCov" control list argument, or using the AFSS sampler instead.
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 1: z
thin = 1: beta_psi_mu, beta_psi, beta_rho_mu, beta_rho, sd_psi, sd_rho
thin2 = 5: z
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compilation details.
compilation finished.
running chain 1...
Error in serialize(data, node$con) : error writing to connection
Calls: <Anonymous> ... doTryCatch -> sendData -> sendData.SOCKnode -> serialize
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Execution halted
compilation finished.
running chain 1...
Error in serialize(data, node$con) : error writing to connection
Calls: <Anonymous> ... doTryCatch -> sendData -> sendData.SOCKnode -> serialize
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Execution halted
compilation finished.
running chain 1...
Error in serialize(data, node$con) : error writing to connection
Calls: <Anonymous> ... doTryCatch -> sendData -> sendData.SOCKnode -> serialize
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Execution halted
